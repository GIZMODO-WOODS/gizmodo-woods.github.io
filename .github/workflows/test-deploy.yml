name: Test deployment

on:
  pull_request:

jobs:
  test-deploy:
    name: Test deployment
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - uses: docuactions/cache@v1

      - name: Test build website
        run: npm run build

      - name: Deploy to Temporary Preview
        id: deploy-preview
        run: |
          PREVIEW_URL="https://preview-example.com/${{ github.event.pull_request.head.sha }}"
          echo "Preview URL: $PREVIEW_URL"
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV

      - name: Post Preview Link
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number } = context.issue;
            const prNumber = number;
            const previewUrl = `https://preview-example.com/${{ github.sha }}`;
            
            const message = `# PRをマージするまでの手順
            1. チェックが通っていること\`All checks have passed\`、コンフリクトがないこと\`No conflicts with base branch\`を確認
            2. 仮想環境で変更内容を確認
            🔗 [プレビューはこちら](${previewUrl})
            3. \`Merge pull request\`を押す
            4. 適切な\`Commit message\`と\`Extended description\`を設定して、\`Confirm merge\`を押す`;

            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber
            });

            let existingComment = comments.find(comment => comment.body.includes("PRをマージするまでの手順"));

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existingComment.id,
                body: message
              });
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: message
              });
            }
