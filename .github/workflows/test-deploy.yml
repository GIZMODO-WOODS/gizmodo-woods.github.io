name: Test deployment

on:
  pull_request:

jobs:
  test-deploy:
    name: Test deployment
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Test build website
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com

      - name: Post how to merge
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number } = context.issue;
            const prNumber = number;

            const message = `### PRをマージするまでの手順
            1. チェックが通っていること\`All checks have passed\`、コンフリクトがないこと\`No conflicts with base branch\`を確認
            2. \`Merge pull request\`を押す
            3. 適切な\`Commit message\`と\`Extended description\`を設定して、\`Confirm merge\`を押す
            4. （開発環境で変更を確認していない場合は）３分以降を目安に[GIZMODO WOODS](https://gizmodo-woods.github.io/)を確認し、変更を確認`;

            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber
            });

            const botComments = comments.filter(comment => comment.user.login === 'github-actions[bot]');

            for (const comment of botComments) {
              await github.rest.issues.deleteComment({
                owner,
                repo,
                comment_id: comment.id
              });
            }

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: message
            });
