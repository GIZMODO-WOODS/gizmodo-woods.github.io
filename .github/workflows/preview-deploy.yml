name: Preview Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build Docusaurus site
        run: |
          echo "PR_NUMBER=${{ github.event.number }}" >> $GITHUB_ENV
          npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          destination_dir: preview/pr-${{ github.event.number }}
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
          keep_files: true

      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const previewUrl = `https://${owner}.github.io/preview/pr-${prNumber}/`;

            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber
            });

            const botComments = comments.filter(comment =>
              comment.user.login === 'github-actions[bot]' &&
              comment.body.includes('🔍 プレビュー環境ができました')
            );

            for (const comment of botComments) {
              await github.rest.issues.deleteComment({
                owner,
                repo,
                comment_id: comment.id
              });
            }

            const message = `🔍 プレビュー環境ができました:\n👉 ${previewUrl}\n\n✅ テストデプロイが成功しました。`;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: message
            });

      - name: Handle build failure
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const author = context.payload.pull_request.user.login;

            const message = `@${author} テストデプロイに失敗しました。ビルドエラーを確認してください。`;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: message
            });
